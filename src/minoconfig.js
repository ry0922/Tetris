class minoconfig{
	static getMino(number){
		let array=[	[0, 0, 0, 0],
					[0, 0, 0, 0],
					[0, 0, 0, 0],
					[0, 0, 0, 0]]
		for(let i=0;i<4;i++){
			for(let j=0;j<4;j++){
				array[i][j]=this.block[number][i][j];
			}
		}
		return array;
	}
}
	const minoList=		[[	[0, 0, 0, 0],
							[0, 1, 1, 0],
							[0, 1, 1, 0],
							[0, 0, 0, 0]],//Oミノ

						[	[0, 0, 0, 0],
							[1, 1, 1, 1],
							[0, 0, 0, 0],
							[0, 0, 0, 0]],//Iミノ

						[	[1, 1, 0, 0],
							[0, 1, 1, 0],
							[0, 0, 0, 0],
							[0, 0, 0, 0]],//Zミノ

						[	[0, 1, 1, 0],
							[1, 1, 0, 0],
							[0, 0, 0, 0],
							[0, 0, 0, 0]],//Sミノ

						[	[1, 0, 0, 0],
							[1, 1, 1, 0],
							[0, 0, 0, 0],
							[0, 0, 0, 0]],//Jミノ

						[	[0, 0, 1, 0],
							[1, 1, 1, 0],
							[0, 0, 0, 0],
							[0, 0, 0, 0]],//Lミノ

						[	[0, 1, 0, 0],
							[1, 1, 1, 0],
							[0, 0, 0, 0],
							[0, 0, 0, 0]]//Tミノ
						];

minoconfig.block =	 
			[[	[0, 0, 0, 0],
				[0, 1, 1, 0],
				[0, 1, 1, 0],
				[0, 0, 0, 0]],//Oミノ

			[	[0, 1, 0, 0],
				[0, 1, 0, 0],
				[0, 1, 0, 0],
				[0, 1, 0, 0]],//Iミノ

			[	[1, 1, 0, 0],
				[0, 1, 1, 0],
				[0, 0, 0, 0],
				[0, 0, 0, 0]],//Zミノ

			[	[0, 1, 1, 0],
				[1, 1, 0, 0],
				[0, 0, 0, 0],
				[0, 0, 0, 0]],//Sミノ

			[	[1, 0, 0, 0],
				[1, 1, 1, 0],
				[0, 0, 0, 0],
				[0, 0, 0, 0],],//Jミノ

			[	[0, 0, 1, 0],
				[1, 1, 1, 0],
				[0, 0, 0, 0],
				[0, 0, 0, 0]],//Lミノ

			[	[0, 1, 0, 0],
				[1, 1, 1, 0],
				[0, 0, 0, 0],
				[0, 0, 0, 0]]//Tミノ
		];


function blockTypeToChar(blockType){
	switch(blockType){
		case 0:
			return "O";
		case 1:
			return "I";
		case 2:
			return "Z";
		case 3:
			return "S";
		case 4:
			return "J";
		case 5:
			return "L";
		case 6:
			return "T";
		default:
			return "A";
	}
}


function getMino(blockNumber){
	let getMino=[	[0, 0, 0, 0],
					[0, 0, 0, 0],
					[0, 0, 0, 0],
					[0, 0, 0, 0]]//空のミノ
	for(let i=0;i<4;i++){
			for(let j=0;j<4;j++){
				getMino[i][j]=minoList[blockNumber][i][j];//ミノ配列をコピー
			}
		}
	return getMino;
}